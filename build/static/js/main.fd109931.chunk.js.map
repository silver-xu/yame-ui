{"version":3,"sources":["types/index.ts","hooks/react-use-fb-login.ts","utils/regex.ts","utils/time.ts","types/doc.ts","services/doc-service.ts","services/repo-service.ts","types/doc-repo.ts","context-providers/auth-provider/auth-provider.tsx","theme/index.ts","utils/deboune.ts","context-providers/editor-provider/editor-provider.tsx","components/editor-app/dialogs/dialog-content.tsx","components/editor-app/dialogs/dialog-title.tsx","components/editor-app/dialogs/table-cell.tsx","components/editor-app/dialogs/file-manager.tsx","components/editor-app/dialogs/remove-file-alert.tsx","context-providers/dialog-provider/dialog-provider.tsx","context-providers/menu-provider/menu-provider.tsx","components/loading/loading.tsx","components/editor-app/side-bar-items/command-button.tsx","components/editor-app/side-bar-items/expandable-container.tsx","components/editor-app/side-bar-items/share-links.tsx","components/editor-app/file-menu/file-menu.tsx","components/editor-app/preview/index.ts","components/editor-app/preview/preview.tsx","components/editor-app/share-menu/share-menu.tsx","components/editor-app/side-bar/side-bar.tsx","components/editor-app/status-bar/status-bar.tsx","components/editor-app/toolbar/toolbar.tsx","components/editor-app/user-profile-menu/user-profile-menu.tsx","components/editor-app/editor/editor.tsx","components/editor-app/editor/index.tsx","components/editor-app/editor-query/editor-query.tsx","components/editor-app/editor-app.tsx","components/preview-app/content/content.tsx","components/preview-app/preview/preview.tsx","utils/dom.ts","components/preview-app/preview-query/preview-query.tsx","components/preview-app/preview-app.tsx","components/viewer-app/viewer-app.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UserType","getWindow","window","loginCallback","response","props","state","setState","authResponse","accessToken","FB","api","locale","language","fields","join","currentUser","Object","objectSpread","isLoggedIn","facebookUser","loaded","onLoginSuccess","getUserInfo","onFailure","useFacebookLogin","_useState","useState","_useState2","slicedToArray","appId","version","useEffect","fbAsyncInit","init","concat","xfbml","cookie","getLoginStatus","setFacekbookAsyncInit","doc","script","sdkId","newScriptElement","createElement","id","src","head","appendChild","fbRoot","getElementById","body","document","loadSdkAsynchronously","login","logout","undefined","onLogoutSuccess","logoutCallback","getMatches","str","regex","groupIndex","groups","matches","exec","push","msIn","pluralize","num","word","getShortFriendlyDateDifference","date1","date2","dateDifference","differenceInMs","getTime","getDifferenceInMs","weeks","Math","floor","days","hours","minutes","seconds","getDateDifference","showdownHighlight","require","xss","xssOptions","whiteList","a","h1","h2","h3","h4","p","ul","ol","li","table","th","tr","td","thead","tbody","b","i","em","pre","nodeRegex","RegExp","nodeTextRegex","nodeIdRegex","converter","showdown","tables","smoothLivePreview","strikethrough","requireSpaceBeforeHeadingText","disableForced4SpacesIndentedSublists","extensions","Doc","docName","content","lastModified","_this","this","classCallCheck","renderedContentCached","contentTreeCached","flatContentTreeCached","unchangedContent","equals","comparisonDoc","toISOString","buildContentNodeTree","flatContentNodeTree","getFlatContentNodeTree","rootNode","text","level","nodes","recursivelyBuildContentNodeTree","renderContent","map","match","node","textMatch","idMatch","parseInt","substring","currentIndex","lastNode","length","parentNode","Date","createClass","key","value","docResponse","_docResponse$doc","dangerousHtml","makeHtml","rawContent","replace","words","split","lines","charCount","wordCount","lineCount","getDocStatistics","addDocToRepo","docRepo","docs","currentDocId","removeDocFromRepo","keys","sortedDocs","openDocInRepo","updateDocInRepo","DocRepo","newDoc","defaultDoc","uuidv4","getUniqueDocName","namePrefix","defaultContent","openDoc","removeDoc","updateDocName","newDocName","updateDoc","defaultPrefix","enumerableDocs","find","get","sort","entries","_ref","_ref2","jsonString","plainDocRepo","JSON","parse","newDocs","forEach","_ref3","_ref4","docRepoResponse","_ref5","_ref6","APP_ID","process","REACT_APP_FB_APP_ID","getAnonymousUser","anonymousAuthToken","localStorage","getItem","anonymousOrNewAuthToken","setItem","authToken","isValid","userName","userType","Anonymous","AuthContext","React","createContext","AuthProvider","memo","children","setCurrentUser","_useFacebookLogin","_onLoginSuccess","_x","apply","arguments","toString","loggedInFBUser","user","name","Facebook","handleLoginSuccess","_onLogoutSuccess","handleLogoutSuccess","_useFacebookLogin2","react_default","Provider","console","log","theme","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","timeout","EditorContext","foo","isSaving","editorKey","updateCurrentDoc","_","updateCurrentDocName","publishCurrentDoc","UPDATE_DOC_REPO","gql","_templateObject","PUBLISH_DOC","_templateObject2","EditorProvider","initialDocRepo","uiState","setUIState","_useState3","unchangedDocRepo","clone","_useState4","docState","setDocState","saveDocRepo","updateDocMutation","docRepoMutation","unChangedDocRepo","filter","updatedDocs","_ref7","deletedDocIds","_ref9","_ref11","deriveDocRepoMutation","variables","then","setTimeout","debouncedSaveDocRepo","func","wait","_len","args","Array","_key","clearTimeout","asyncToGenerator","regenerator_default","mark","_callee","publishDocMutation","_docRepo$currentDoc","wrap","_context","prev","next","currentDoc","docMutation","stop","react_apollo_browser_umd","mutation","publishDoc","_updateCurrentDoc","_x2","_newDoc","_openDoc","_x3","_removeDoc","_x4","_updateCurrentDocName","_x5","_publishCurrentDoc","DialogContent","withStyles","root","borderTop","divider","borderBottom","padding","classes","DialogContent_default","className","library","add","faTimes","DialogTitle","margin","spacing","unit","closeButton","position","right","top","color","grey","onClose","DialogTitle_default","Typography_default","variant","IconButton_default","aria-label","onClick","react_fontawesome_index_es","icon","TableCell","cursor","align","component","TableCell_default","faTrashAlt","faCheck","FileManager","_useContext","useContext","_useContext2","DialogContext","isFileManagerOpen","setFileManagerOpen","setRemoveFileAlertOpen","selectedDocId","setSelectedDocId","handleClose","core_index_es","aria-labelledby","open","fullWidth","dialog_title_DialogTitle","dialog_content_DialogContent","width","table_cell_TableCell","hover","e","handleTableRowClick","getFriendlyLastModifiedTimespan","stopPropagation","handleRemove","Transition","assign","direction","RemoveFileAlert","isRemoveFileAlertOpen","docToRemove","TransitionComponent","keepMounted","aria-describedby","DialogProvider","removeFileAlertState","setRemoveFileAlertState","remove_file_alert_RemoveFileAlert","MenuContext","setActiveMenu","inTransition","MenuProvider","activeMenu","setInTransition","nextActiveMenu","Loading","CommandButton","description","heading","Fragment","faChevronRight","ExpandableContainer","initiallyExpanded","expanded","setExpanded","classnames","chev","down","hide","defaultProps","ShareLinks","shareLink","type","onFocus","handleLinkFocus","target","setSelectionRange","faPlus","faFileUpload","faDownload","faFilePdf","faFileWord","faFile","FileMenu","command_button_CommandButton","Preview","_Component","possibleConstructorReturn","getPrototypeOf","call","previewRef","handleScroll","current","scrollPercentage","scrollTop","scrollHeight","onScroll","injectPreviewMarkup","markup","__html","createRef","inherits","topOffset","scrollTo","_this$props","previewContent","onBlur","onMouseOver","ref","onMouseEnter","onMouseLeave","dangerouslySetInnerHTML","Component","faExternalLinkSquareAlt","faUnlockAlt","faCopy","faPenAlt","faFileAlt","faNewspaper","faCogs","ShareMenu","share_links_ShareLinks","expandable_container_ExpandableContainer","placeholder","Button_default","size","SideBar","side-bar-overlay","side-bar","faSave","faColumns","faToolbox","Menu","StatusBar","hideToolbar","splitScreen","savingIcon","command","active","onSplitScreenToggle","onToolbarToggle","faFolder","faShare","faUserSecret","faSync","fab","Toolbar","_useContext3","calculateDocNameWidth","style","error","onChange","maxLength","href","File","Share","UserProfile","UserProfileMenu","Editor","mdeInstance","previewInFocus","handlePreviewFocus","handlePreviewBlur","handleEditorScroll","height","editorScrollPercentage","setInstance","instance","codemirror","setOption","handlePreviewScroll","previewScrollPercentage","offsetTop","handleSplitScreenToggle","handleToolbarToggle","hideToolbars","toolbarOutOfFocus","_this2","_this$state","Consumer","editor-container","side-bar-open","no-toolbar","editor-only","toolbar_Toolbar","lostFocus","onMenuToggle","lib_default","getMdeInstance","events","change","changes","beforeChange","cursorActivity","beforeSelectionChange","viewportChange","gutterClick","focus","blur","scroll","update","renderLine","mousedown","dblclick","touchstart","contextmenu","keydown","keypress","keyup","cut","copy","paste","dragstart","dragenter","dragover","dragleave","drop","options","status","autosave","enabled","uniqueId","toolbar","editor_app_preview","side_bar_SideBar","file_menu_FileMenu","share_menu_ShareMenu","user_profile_menu_UserProfileMenu","status_bar_StatusBar","getStatistics","API_URL","REACT_APP_EXP_API_URL","DOC_REPO_QUERY","editor_query_templateObject","EditorQuery","authLink","setContext","headers","authorization","client","ApolloClient","link","ApolloLink","from","onError","graphQLErrors","networkError","message","locations","path","HttpLink","uri","cache","InMemoryCache","query","fetchPolicy","loading","data","parseFromResponse","menu_provider_MenuProvider","editor_app_editor","loading_Loading","EditorApp","styles","MuiTheme","Content","faArrowUp","nodeTree","nodeDoms","getActiveNodeDom","minClientTopNodeDom","nodeDom","el","rect","getBoundingClientRect","left","bottom","innerHeight","documentElement","clientHeight","innerWidth","clientWidth","isElementInViewport","dom","activeNode","setActiveNode","surpressScrollTracking","setSurpressScrollTracking","_useState5","_useState6","showScrollUp","setShowScrollUp","contentRef","traverseTree","currentNode","action","element","querySelector","activeNodeDom","handleContentScroll","newActiveNodeDom","currentTarget","renderTree","treeNode","handleLinkClick","throttle","content_Content","DOC_QUERY","preview_query_templateObject","PreviewQuery","docId","preview_preview_Preview","PreviewApp","params","ViewerApp","permalink","App","BrowserRouter","Switch","Route","exact","Boolean","location","hostname","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd109931.chunk.js","sourcesContent":["import { Doc } from './doc';\nimport { DocRepo } from './doc-repo';\n\nexport interface IDocStatistics {\n    charCount: number;\n    wordCount: number;\n    lineCount: number;\n}\n\nexport interface IUser {\n    authToken: string;\n    id?: string;\n    isValid: boolean;\n    userName?: string;\n    userType: UserType;\n}\n\nexport enum UserType {\n    Anonymous = 'Anonymous',\n    Facebook = 'Facebook'\n}\n\nexport interface IDoc {\n    id: string;\n    docName: string;\n    content: string;\n    lastModified: Date;\n}\n\nexport interface IDocRepoMutation {\n    newDocs: IDoc[];\n    updatedDocs: IDoc[];\n    deletedDocIds: string[];\n}\n\nexport interface IDefaultDoc {\n    namePrefix: string;\n    defaultContent: string;\n}\n\nexport { Doc, DocRepo };\n","import { useEffect, useState } from 'react';\n\nexport interface IFacebookUser {\n    id?: string;\n    name?: string;\n    email?: string;\n    accessToken: string;\n}\n\nexport interface IFaceBookLoginState {\n    isLoggedIn: boolean;\n    facebookUser?: IFacebookUser;\n    loaded: boolean;\n}\n\ntype FacebookFields = 'name' | 'email' | 'gender' | 'id';\n\nexport interface IFaceBookLoginProps {\n    appId: string;\n    language: string;\n    version: string;\n    fields: FacebookFields[];\n    onFailure?: (response: any) => void;\n    onLoginSuccess?: (user: IFacebookUser) => void;\n    onLogoutSuccess?: () => void;\n}\n\nconst getWindow = (): any => {\n    return window as any;\n};\n\nconst getUserInfo = (\n    props: IFaceBookLoginProps,\n    state: IFaceBookLoginState,\n    setState: (state: IFaceBookLoginState) => void,\n    accessToken: string\n): void => {\n    getWindow().FB.api(\n        '/me',\n        { locale: props.language, fields: props.fields.join(',') },\n        (response: any) => {\n            const currentUser: IFacebookUser = { ...response, accessToken };\n            setState({\n                ...state,\n                isLoggedIn: true,\n                facebookUser: currentUser,\n                loaded: true\n            });\n\n            const { onLoginSuccess } = props;\n\n            if (onLoginSuccess) {\n                onLoginSuccess(currentUser);\n            }\n        }\n    );\n};\n\nconst setFacekbookAsyncInit = (\n    props: IFaceBookLoginProps,\n    state: IFaceBookLoginState,\n    setState: (state: IFaceBookLoginState) => void\n): void => {\n    getWindow().fbAsyncInit = () => {\n        getWindow().FB.init({\n            version: `v${props.version}`,\n            appId: `${props.appId}`,\n            xfbml: false,\n            cookie: false\n        });\n\n        getWindow().FB.getLoginStatus((response: any) =>\n            loginCallback(response, props, state, setState)\n        );\n    };\n};\n\nconst loadSdkAsynchronously = (\n    props: IFaceBookLoginProps,\n    state: IFaceBookLoginState\n): void => {\n    ((doc: Document, script: string, sdkId: string) => {\n        const newScriptElement = doc.createElement(script) as HTMLScriptElement;\n\n        newScriptElement.id = sdkId;\n        newScriptElement.src = `https://connect.facebook.net/${\n            props.language\n        }/sdk.js`;\n        doc.head.appendChild(newScriptElement);\n\n        let fbRoot = doc.getElementById('fb-root');\n        if (!fbRoot) {\n            fbRoot = doc.createElement('div');\n            fbRoot.id = 'fb-root';\n            doc.body.appendChild(fbRoot);\n        }\n    })(document, 'script', 'facebook-jssdk');\n};\n\nconst loginCallback = (\n    response: any,\n    props: IFaceBookLoginProps,\n    state: IFaceBookLoginState,\n    setState: (state: IFaceBookLoginState) => void\n): void => {\n    if (response.authResponse) {\n        getUserInfo(props, state, setState, response.authResponse.accessToken);\n    } else {\n        if (props.onFailure) {\n            props.onFailure(response);\n        }\n    }\n};\n\nconst logoutCallback = (\n    response: any,\n    props: IFaceBookLoginProps,\n    state: IFaceBookLoginState,\n    setState: (state: IFaceBookLoginState) => void\n): void => {\n    if (response.authResponse) {\n        setState({\n            ...state,\n            isLoggedIn: false,\n            facebookUser: undefined\n        });\n\n        const { onLogoutSuccess } = props;\n        if (onLogoutSuccess) {\n            onLogoutSuccess();\n        }\n    } else {\n        if (props.onFailure) {\n            props.onFailure(response);\n        }\n    }\n};\n\nexport const useFacebookLogin = (\n    props: IFaceBookLoginProps\n): [IFaceBookLoginState, () => void, () => void] => {\n    const [state, setState] = useState<IFaceBookLoginState>({\n        isLoggedIn: false,\n        loaded: false\n    });\n\n    const { appId, fields, language, version } = props;\n\n    const login = (): void => {\n        getWindow().FB.login((response: any) =>\n            loginCallback(response, props, state, setState)\n        );\n    };\n\n    const logout = (): void => {\n        getWindow().FB.logout((response: any) =>\n            logoutCallback(response, props, state, setState)\n        );\n    };\n\n    useEffect(() => {\n        setFacekbookAsyncInit(props, state, setState);\n        loadSdkAsynchronously(props, state);\n    }, [appId, fields.join(','), language, version]);\n\n    return [state, login, logout];\n};\n","export const getMatches = (\n    str: string,\n    regex: RegExp,\n    groupIndex: number\n): string[] => {\n    const groups = [];\n    let matches = regex.exec(str);\n    while (matches !== null) {\n        groups.push(matches[groupIndex]);\n        matches = regex.exec(str);\n    }\n\n    return groups;\n};\n","const msIn = {\n    week: 1000 * 60 * 60 * 24 * 7,\n    day: 1000 * 60 * 60 * 24,\n    hour: 1000 * 60 * 60,\n    minute: 1000 * 60,\n    second: 1000\n};\n\nconst getDifferenceInMs = (date1: Date, date2: Date): number => {\n    const date1InMs = date1.getTime();\n    const date2InMs = date2.getTime();\n\n    const diffInMs = date1InMs - date2InMs;\n    return diffInMs;\n};\n\nconst pluralize = (num: number, word: string): string => {\n    if (num > 1) {\n        return word + 's';\n    }\n    return word;\n};\n\nexport interface IDateDifference {\n    weeks: number;\n    days: number;\n    hours: number;\n    minutes: number;\n    seconds: number;\n}\n\nexport const getDateDifference = (\n    date1: Date,\n    date2: Date\n): IDateDifference => {\n    const differenceInMs = getDifferenceInMs(date1, date2);\n    const weeks = Math.floor(differenceInMs / msIn.week);\n    const days = Math.floor((differenceInMs % msIn.week) / msIn.day);\n    const hours = Math.floor((differenceInMs % msIn.day) / msIn.hour);\n    const minutes = Math.floor((differenceInMs % msIn.hour) / msIn.minute);\n    const seconds = Math.floor((differenceInMs % msIn.minute) / msIn.second);\n\n    return {\n        weeks,\n        days,\n        hours,\n        minutes,\n        seconds\n    };\n};\n\nexport const getShortFriendlyDateDifference = (\n    date1: Date,\n    date2: Date\n): string => {\n    const dateDifference = getDateDifference(date1, date2);\n    if (dateDifference.weeks) {\n        return `${dateDifference.weeks} ${pluralize(\n            dateDifference.weeks,\n            'week'\n        )}`;\n    } else if (dateDifference.days) {\n        return `${dateDifference.days} ${pluralize(\n            dateDifference.days,\n            'day'\n        )}`;\n    } else if (dateDifference.hours) {\n        return `${dateDifference.hours} ${pluralize(\n            dateDifference.hours,\n            'hour'\n        )}`;\n    } else if (dateDifference.minutes) {\n        return `${dateDifference.minutes} ${pluralize(\n            dateDifference.minutes,\n            'min'\n        )}`;\n    } else {\n        return `${dateDifference.seconds} ${pluralize(\n            dateDifference.seconds,\n            'sec'\n        )}`;\n    }\n};\n","import * as showdown from 'showdown';\nimport { IDoc, IDocStatistics } from '.';\nimport { getDocStatistics } from '../services/doc-service';\nimport { getMatches } from '../utils/regex';\nimport { getShortFriendlyDateDifference } from '../utils/time';\n// tslint:disable-next-line:no-var-requires\nconst showdownHighlight = require('showdown-highlight');\n// tslint:disable-next-line:no-var-requires\nconst xss = require('xss');\nconst xssOptions = {\n    whiteList: {\n        a: ['href', 'title', 'target'],\n        h1: ['id'],\n        h2: ['id'],\n        h3: ['id'],\n        h4: ['id'],\n        p: [],\n        ul: [],\n        ol: [],\n        li: [],\n        table: [],\n        th: [],\n        tr: [],\n        td: [],\n        thead: [],\n        tbody: [],\n        b: [],\n        i: [],\n        em: [],\n        pre: []\n    }\n};\n\nconst nodeRegex = new RegExp(/<h[1-3] id=\".*\">.*<\\/h[1-3]>/gm);\nconst nodeTextRegex = new RegExp(/<h[1-3] id=\".*\">(.*?)<\\/h[1-3]>/gm);\nconst nodeIdRegex = new RegExp(/id=\"(.*?)\"/gm);\n\nconst converter = new showdown.Converter({\n    tables: true,\n    smoothLivePreview: true,\n    strikethrough: true,\n    requireSpaceBeforeHeadingText: true,\n    disableForced4SpacesIndentedSublists: true,\n    extensions: [showdownHighlight]\n});\n\nexport interface IContentNode {\n    level: number;\n    text: string;\n    id: string;\n    parentNode?: IContentNode;\n    nodes: IContentNode[];\n}\n\nexport class Doc implements IDoc {\n    public static parseFromResponse(docResponse: any): Doc {\n        const { id, docName, content, lastModified } = docResponse.doc;\n        return new Doc(id, docName, content, lastModified);\n    }\n\n    public id: string;\n    public docName: string;\n    public content: string;\n    public lastModified: Date;\n\n    private renderedContentCached?: string;\n    private contentTreeCached?: IContentNode;\n    private flatContentTreeCached?: IContentNode[];\n    private unchangedContent: string;\n\n    constructor(\n        id: string,\n        docName: string,\n        content: string,\n        lastModified: Date\n    ) {\n        this.id = id;\n        this.docName = docName;\n        this.content = content;\n        this.unchangedContent = content;\n        this.lastModified = new Date(lastModified);\n    }\n\n    public equals = (comparisonDoc: Doc): boolean => {\n        return (\n            this.content === comparisonDoc.content &&\n            this.docName === comparisonDoc.docName &&\n            this.lastModified.toISOString() ===\n                comparisonDoc.lastModified.toISOString()\n        );\n    };\n\n    // using cached rendered content to boost performance of rendering\n    public renderContent(): string {\n        if (\n            this.content !== this.unchangedContent ||\n            !this.renderedContentCached\n        ) {\n            const dangerousHtml = converter.makeHtml(this.content);\n            this.renderedContentCached = xss(dangerousHtml, xssOptions);\n            this.unchangedContent = this.content;\n        }\n\n        // it will never be undefined\n        return this.renderedContentCached as string;\n    }\n\n    public getStatistics(): IDocStatistics {\n        return getDocStatistics(this);\n    }\n\n    public getFriendlyLastModifiedTimespan(): string {\n        return `${getShortFriendlyDateDifference(\n            new Date(),\n            this.lastModified\n        )}`;\n    }\n\n    public buildContentNodeTree = (): IContentNode => {\n        if (this.content !== this.unchangedContent || !this.contentTreeCached) {\n            const flatContentNodeTree = this.getFlatContentNodeTree();\n            const rootNode = {\n                id: 'root',\n                text: 'root',\n                level: 0,\n                nodes: []\n            };\n\n            this.recursivelyBuildContentNodeTree(\n                flatContentNodeTree,\n                0,\n                rootNode\n            );\n            this.contentTreeCached = rootNode;\n        }\n        return this.contentTreeCached;\n    };\n\n    private getFlatContentNodeTree = (): IContentNode[] => {\n        if (\n            this.content !== this.unchangedContent ||\n            !this.flatContentTreeCached\n        ) {\n            // using cached rendered content so the following statement has minimum performance penalty\n            const matches = getMatches(this.renderContent(), nodeRegex, 0);\n            this.flatContentTreeCached = matches.map(match => {\n                const node = match;\n                const textMatch = getMatches(node, nodeTextRegex, 1);\n                const text = textMatch ? textMatch[0] : '';\n                const idMatch = getMatches(node, nodeIdRegex, 1);\n                const id = idMatch ? idMatch[0] : '';\n                const level = parseInt(node.substring(2, 3), 10);\n                return {\n                    id,\n                    text,\n                    level,\n                    nodes: []\n                };\n            });\n        }\n        return this.flatContentTreeCached;\n    };\n\n    private recursivelyBuildContentNodeTree = (\n        flatContentNodeTree: IContentNode[],\n        currentIndex: number,\n        lastNode: IContentNode\n    ) => {\n        if (currentIndex >= flatContentNodeTree.length) {\n            return;\n        } else if (flatContentNodeTree[currentIndex].level < lastNode.level) {\n            if (lastNode.parentNode) {\n                this.recursivelyBuildContentNodeTree(\n                    flatContentNodeTree,\n                    currentIndex,\n                    lastNode.parentNode\n                );\n            }\n            return;\n        } else if (flatContentNodeTree[currentIndex].level === lastNode.level) {\n            if (lastNode.parentNode) {\n                flatContentNodeTree[currentIndex].parentNode =\n                    lastNode.parentNode;\n                lastNode.parentNode.nodes.push(\n                    flatContentNodeTree[currentIndex]\n                );\n            }\n        } else if (flatContentNodeTree[currentIndex].level > lastNode.level) {\n            flatContentNodeTree[currentIndex].parentNode = lastNode;\n            lastNode.nodes.push(flatContentNodeTree[currentIndex]);\n        }\n\n        this.recursivelyBuildContentNodeTree(\n            flatContentNodeTree,\n            currentIndex + 1,\n            flatContentNodeTree[currentIndex]\n        );\n    };\n}\n","import { Doc, IDocStatistics } from '../types';\n\nexport const getDocStatistics = (doc: Doc): IDocStatistics => {\n    const { renderContent } = doc;\n    const rawContent = renderContent().replace(/(<([^>]+)>)/gi, '');\n    const words = rawContent.split(/[\\s,.\\r\\n]+/);\n    const lines = rawContent.split(/[\\n\\r]+/);\n\n    return {\n        charCount: rawContent.length,\n        wordCount: words.length,\n        lineCount: lines.length\n    };\n};\n","import uuidv4 from 'uuid/v4';\nimport { Doc, DocRepo, IDocRepoMutation } from '../types';\n\nexport const addDocToRepo = (doc: Doc, docRepo: DocRepo) => {\n    docRepo.docs[doc.id] = doc;\n    docRepo.currentDocId = doc.id;\n};\n\nexport const getDocFromRepo = (id: string, docRepo: DocRepo) => {\n    return docRepo.docs[id] as Doc;\n};\n\nexport const removeDocFromRepo = (doc: Doc, docRepo: DocRepo) => {\n    if (Object.keys(docRepo.docs).length > 1) {\n        delete docRepo.docs[doc.id];\n        docRepo.currentDocId = docRepo.sortedDocs[0].id;\n    }\n};\n\nexport const openDocInRepo = (doc: Doc, docRepo: DocRepo) => {\n    docRepo.currentDocId = doc.id;\n};\n\nexport const updateDocInRepo = (doc: Doc, docRepo: DocRepo) => {\n    doc.lastModified = new Date();\n    docRepo.docs[doc.id] = doc;\n};\n\nexport const deriveDocRepoMutation = (\n    docRepo: DocRepo,\n    unChangedDocRepo: DocRepo\n): IDocRepoMutation => {\n    const newDocs = Object.entries(docRepo.docs)\n        .filter(([id]: [string, Doc]) => !unChangedDocRepo.docs[id])\n        .map(([, doc]: [string, Doc]) => {\n            return {\n                id: doc.id,\n                docName: doc.docName,\n                content: doc.content,\n                lastModified: doc.lastModified\n            };\n        });\n\n    const updatedDocs = Object.entries(docRepo.docs)\n        .filter(\n            ([id, doc]: [string, Doc]) =>\n                unChangedDocRepo.docs[id] &&\n                !unChangedDocRepo.docs[id].equals(doc)\n        )\n        .map(([, doc]: [string, Doc]) => {\n            return {\n                id: doc.id,\n                docName: doc.docName,\n                content: doc.content,\n                lastModified: doc.lastModified\n            };\n        });\n\n    const deletedDocIds = Object.entries(unChangedDocRepo.docs)\n        .filter(([id]: [string, Doc]) => !docRepo.docs[id])\n        .map(([id]: [string, Doc]) => id);\n\n    return {\n        newDocs,\n        updatedDocs,\n        deletedDocIds\n    };\n};\n","import uuidv4 from 'uuid/v4';\nimport { IDefaultDoc } from '.';\nimport {\n    addDocToRepo,\n    openDocInRepo,\n    removeDocFromRepo,\n    updateDocInRepo\n} from '../services/repo-service';\nimport { Doc } from './doc';\n\nexport class DocRepo {\n    get sortedDocs(): Doc[] {\n        return this.enumerableDocs.sort((a: Doc, b: Doc) => {\n            return (\n                new Date(b.lastModified).getTime() -\n                new Date(a.lastModified).getTime()\n            );\n        });\n    }\n\n    get enumerableDocs(): Doc[] {\n        return Object.entries(this.docs).map(([_, doc]) => {\n            return doc;\n        });\n    }\n\n    get currentDoc(): Doc {\n        return this.docs[this.currentDocId];\n    }\n\n    public static parseFromJson(jsonString: string): DocRepo {\n        const plainDocRepo = JSON.parse(jsonString) as DocRepo;\n        const newDocs: { [id: string]: Doc } = {};\n\n        Object.entries(plainDocRepo.docs).forEach(([id, doc]) => {\n            newDocs[id] = new Doc(\n                doc.id,\n                doc.docName,\n                doc.content,\n                doc.lastModified\n            );\n        });\n\n        return new DocRepo(newDocs);\n    }\n\n    public static parseFromResponse(docRepoResponse: any): DocRepo {\n        const newDocs: { [id: string]: Doc } = {};\n        docRepoResponse.docs.forEach((doc: any) => {\n            newDocs[doc.id] = new Doc(\n                doc.id,\n                doc.docName,\n                doc.content,\n                doc.lastModified\n            );\n        });\n\n        return new DocRepo(newDocs);\n    }\n\n    public docs: { [id: string]: Doc };\n    public currentDocId: string;\n\n    constructor(docs: { [id: string]: Doc }) {\n        this.docs = docs;\n        this.currentDocId = this.sortedDocs[0].id;\n    }\n\n    public clone(): DocRepo {\n        const plainDocRepo = { ...this } as DocRepo;\n        const newDocs: { [id: string]: Doc } = {};\n\n        Object.entries(plainDocRepo.docs).forEach(([id, doc]) => {\n            newDocs[id] = new Doc(\n                doc.id,\n                doc.docName,\n                doc.content,\n                doc.lastModified\n            );\n        });\n\n        return new DocRepo(newDocs);\n    }\n\n    public newDoc = (defaultDoc: IDefaultDoc): Doc => {\n        const newDoc = new Doc(\n            uuidv4(),\n            this.getUniqueDocName(defaultDoc.namePrefix),\n            defaultDoc.defaultContent,\n            new Date()\n        );\n\n        addDocToRepo(newDoc, this);\n        return newDoc;\n    };\n\n    public openDoc = (id: string) => {\n        openDocInRepo(this.docs[id], this);\n    };\n\n    public removeDoc = (id: string) => {\n        removeDocFromRepo(this.docs[id], this);\n    };\n\n    public updateDocName = (doc: Doc, newDocName: string) => {\n        doc.docName = newDocName;\n        this.updateDoc(doc);\n    };\n\n    public updateDoc = (doc: Doc) => {\n        updateDocInRepo(doc, this);\n    };\n\n    private getUniqueDocName = (defaultPrefix: string) => {\n        let i = 1;\n\n        while (\n            this.enumerableDocs.find(\n                doc => doc.docName === `${defaultPrefix} ${i}`\n            )\n        ) {\n            i++;\n        }\n\n        return `${defaultPrefix} ${i}`;\n    };\n}\n","import React, { ReactNode, useState } from 'react';\nimport uuidv4 from 'uuid';\nimport { useFacebookLogin } from '../../hooks/react-use-fb-login';\nimport { IUser, UserType } from '../../types';\n\nconst AUTH_TOKEN_KEY = 'anonymousAuthToken';\nconst APP_ID = process.env.REACT_APP_FB_APP_ID || '';\n\nconst getAnonymousUser = () => {\n    const anonymousAuthToken = localStorage.getItem(AUTH_TOKEN_KEY);\n    const anonymousOrNewAuthToken = anonymousAuthToken\n        ? anonymousAuthToken\n        : uuidv4();\n\n    if (anonymousAuthToken !== anonymousOrNewAuthToken) {\n        localStorage.setItem(AUTH_TOKEN_KEY, anonymousOrNewAuthToken);\n    }\n\n    return {\n        authToken: anonymousOrNewAuthToken,\n        id: anonymousOrNewAuthToken,\n        isValid: true,\n        userName: 'Anonymous',\n        userType: UserType.Anonymous\n    };\n};\n\nexport interface IAuthProviderProps {\n    children?: ReactNode;\n    onLoginSuccess?: (loggedInUser: IUser) => {};\n    onLogoutSuccess?: () => {};\n}\n\nexport interface IAuthContextValue {\n    currentUser?: IUser;\n    login: () => void;\n    logout: () => void;\n}\n\nexport const AuthContext = React.createContext<IAuthContextValue>({\n    login: () => {},\n    logout: () => {}\n});\n\nexport const AuthProvider = React.memo((props: IAuthProviderProps) => {\n    const { children, onLoginSuccess, onLogoutSuccess } = props;\n\n    const [currentUser, setCurrentUser] = useState<IUser | undefined>(\n        undefined\n    );\n\n    const [_, login, logout] = useFacebookLogin({\n        appId: APP_ID,\n        language: 'EN',\n        version: '3.1',\n        fields: ['id', 'name', 'email'],\n        onLoginSuccess: loggedInFBUser => {\n            const user = {\n                authToken: `fb-${loggedInFBUser.accessToken}`,\n                id: loggedInFBUser.id,\n                isValid: true,\n                userName: loggedInFBUser.name,\n                userType: UserType.Facebook\n            };\n            setCurrentUser(user);\n            handleLoginSuccess(user, onLoginSuccess);\n        },\n        onLogoutSuccess: () => {\n            setCurrentUser(getAnonymousUser());\n            handleLogoutSuccess(onLogoutSuccess);\n        },\n        onFailure: () => {\n            setCurrentUser(getAnonymousUser());\n        }\n    });\n\n    return (\n        <AuthContext.Provider value={{ currentUser, login, logout }}>\n            {children}\n        </AuthContext.Provider>\n    );\n});\n\nconst handleLoginSuccess = (\n    loggedInFBUser: IUser,\n    onLoginSuccess?: (response: any) => {}\n) => {\n    if (onLoginSuccess) {\n        onLoginSuccess(loggedInFBUser);\n    }\n};\nconst handleLogoutSuccess = (onLogoutSuccess?: () => {}) => {\n    console.log('logged out');\n\n    if (onLogoutSuccess) {\n        onLogoutSuccess();\n    }\n};\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        useNextVariants: true\n    },\n    palette: {\n        primary: {\n            light: '#90caf9',\n            main: '#2196f3',\n            dark: '#1565c0',\n            contrastText: '#fff'\n        }\n    }\n});\n\nexport default theme;\n","export type Procedure = (...args: any[]) => void;\n\nconst timeout: { [funcName: string]: NodeJS.Timeout } = {};\n\nexport const debounce = <F extends Procedure>(func: F, wait: number) => {\n    return (...args: any[]) => {\n        if (timeout[func.name]) {\n            clearTimeout(timeout[func.name]);\n        }\n\n        timeout[func.name] = setTimeout(() => {\n            delete timeout[func.name];\n            func.apply(null, args);\n        }, wait);\n    };\n};\n","import gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport { Mutation, MutationFn, OperationVariables } from 'react-apollo';\nimport uuidv4 from 'uuid/v4';\nimport { deriveDocRepoMutation } from '../../services/repo-service';\nimport { Doc, DocRepo, IDefaultDoc } from '../../types';\nimport { debounce } from '../../utils/deboune';\n\nexport interface IEditorProviderProps {\n    docRepo: DocRepo;\n    defaultDoc: IDefaultDoc;\n    children?: React.ReactNode;\n}\n\nexport interface IEditorContextValue {\n    docRepo: DocRepo;\n    isSaving: boolean;\n    editorKey: string;\n    updateCurrentDoc: (value: string) => void;\n    newDoc: () => void;\n    openDoc: (id: string) => void;\n    removeDoc: (id: string) => void;\n    updateCurrentDocName: (newDocName: string) => void;\n    publishCurrentDoc: () => void;\n}\n\nexport interface IEditorProviderUIState {\n    isSaving: boolean;\n    editorKey: string;\n}\n\nexport interface IEditorProviderDocState {\n    docRepo: DocRepo;\n    unchangedDocRepo: DocRepo;\n}\n\nexport const EditorContext = React.createContext<IEditorContextValue>({\n    docRepo: new DocRepo({ foo: new Doc('foo', 'bar', 'foobar', new Date()) }),\n    isSaving: false,\n    editorKey: '',\n    updateCurrentDoc: () => {},\n    newDoc: () => {},\n    openDoc: (_: string) => {},\n    removeDoc: (_: string) => {},\n    updateCurrentDocName: (_: string) => {},\n    publishCurrentDoc: () => {}\n});\n\nconst UPDATE_DOC_REPO = gql`\n    mutation UpdateDocRepo($docRepoMutation: DocRepoMutation) {\n        updateDocRepo(docRepoMutation: $docRepoMutation)\n    }\n`;\n\nconst PUBLISH_DOC = gql`\n    mutation publishDoc($docMutation: DocMutation) {\n        publishDoc(docMutation: $docMutation)\n    }\n`;\n\nexport const EditorProvider = React.memo((props: IEditorProviderProps) => {\n    const { docRepo: initialDocRepo, defaultDoc, children } = props;\n\n    const [uiState, setUIState] = useState<IEditorProviderUIState>({\n        isSaving: false,\n        editorKey: uuidv4()\n    });\n\n    const [docState, setDocState] = useState<IEditorProviderDocState>({\n        docRepo: initialDocRepo,\n        unchangedDocRepo: initialDocRepo.clone()\n    });\n\n    const { isSaving, editorKey } = uiState;\n    const { docRepo, unchangedDocRepo } = docState;\n\n    const saveDocRepo = (\n        updateDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        setUIState({\n            ...uiState,\n            isSaving: true\n        });\n\n        const docRepoMutation = deriveDocRepoMutation(\n            docRepo,\n            unchangedDocRepo\n        );\n        // there is a change\n        if (\n            docRepoMutation.newDocs.length > 0 ||\n            docRepoMutation.updatedDocs.length > 0 ||\n            docRepoMutation.deletedDocIds.length > 0\n        ) {\n            updateDocMutation({\n                variables: { docRepoMutation }\n            }).then(() => {\n                setDocState({\n                    ...docState,\n                    unchangedDocRepo: docRepo.clone()\n                });\n\n                setTimeout(() => {\n                    setUIState({\n                        ...uiState,\n                        isSaving: false\n                    });\n                }, 500);\n            });\n        }\n    };\n\n    const debouncedSaveDocRepo = (\n        updateDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        debounce(saveDocRepo, 1500)(updateDocMutation);\n    };\n\n    const updateCurrentDoc = (\n        value: string,\n        updateDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        docRepo.currentDoc.content = value;\n        docRepo.updateDoc(docRepo.currentDoc);\n\n        setDocState({\n            ...docState,\n            docRepo\n        });\n\n        debouncedSaveDocRepo(updateDocMutation);\n    };\n\n    const newDoc = (updateDocMutation: MutationFn<any, OperationVariables>) => {\n        docRepo.newDoc(defaultDoc);\n        setUIState({\n            ...uiState,\n            editorKey: uuidv4()\n        });\n\n        setDocState({\n            ...docState,\n            docRepo\n        });\n\n        saveDocRepo(updateDocMutation);\n    };\n\n    const openDoc = (id: string) => {\n        docRepo.openDoc(id);\n        setUIState({\n            ...uiState,\n            editorKey: uuidv4()\n        });\n\n        setDocState({\n            ...docState,\n            docRepo\n        });\n    };\n\n    const removeDoc = (\n        id: string,\n        updateDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        docRepo.removeDoc(id);\n        setUIState({\n            ...uiState,\n            editorKey: uuidv4()\n        });\n\n        setDocState({\n            ...docState,\n            docRepo\n        });\n\n        saveDocRepo(updateDocMutation);\n    };\n\n    const updateCurrentDocName = (\n        newDocName: string,\n        updateDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        docRepo.updateDocName(docRepo.currentDoc, newDocName);\n        setUIState({\n            ...uiState,\n            editorKey: uuidv4()\n        });\n\n        setDocState({\n            ...docState,\n            docRepo\n        });\n\n        saveDocRepo(updateDocMutation);\n    };\n\n    const publishCurrentDoc = async (\n        publishDocMutation: MutationFn<any, OperationVariables>\n    ) => {\n        const { id, docName, content, lastModified } = docRepo.currentDoc;\n        await publishDocMutation({\n            variables: {\n                docMutation: {\n                    id,\n                    docName,\n                    content,\n                    lastModified\n                }\n            }\n        });\n    };\n\n    return (\n        <Mutation mutation={PUBLISH_DOC}>\n            {publishDoc => (\n                <Mutation mutation={UPDATE_DOC_REPO}>\n                    {updateDoc => (\n                        <EditorContext.Provider\n                            value={{\n                                docRepo,\n                                isSaving,\n                                editorKey,\n                                updateCurrentDoc: (value: string) =>\n                                    updateCurrentDoc(value, updateDoc),\n                                newDoc: () => newDoc(updateDoc),\n                                openDoc: (id: string) => openDoc(id),\n                                removeDoc: (id: string) =>\n                                    removeDoc(id, updateDoc),\n                                updateCurrentDocName: (newDocName: string) =>\n                                    updateCurrentDocName(newDocName, updateDoc),\n                                publishCurrentDoc: () =>\n                                    publishCurrentDoc(publishDoc)\n                            }}\n                        >\n                            {children}\n                        </EditorContext.Provider>\n                    )}\n                </Mutation>\n            )}\n        </Mutation>\n    );\n});\n","import MuiDialogContent from '@material-ui/core/DialogContent';\nimport { withStyles } from '@material-ui/core/styles';\nimport React from 'react';\n\nexport const DialogContent = withStyles(theme => ({\n    root: {\n        borderTop: `1px solid ${theme.palette.divider}`,\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        padding: '0px'\n    }\n}))((props: { children: React.ReactNode; classes: any }) => {\n    const { children, classes } = props;\n\n    return (\n        <MuiDialogContent className={classes.root}>{children}</MuiDialogContent>\n    );\n});\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(faTimes);\n\nexport const DialogTitle = withStyles(theme => ({\n    root: {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n        margin: 0,\n        padding: theme.spacing.unit * 2\n    },\n    closeButton: {\n        position: 'absolute',\n        right: theme.spacing.unit,\n        top: theme.spacing.unit,\n        color: theme.palette.grey[500]\n    }\n}))(\n    (props: {\n        children: React.ReactNode;\n        classes: any;\n        onClose: () => void;\n    }) => {\n        const { children, classes, onClose } = props;\n        return (\n            <MuiDialogTitle>\n                <Typography variant=\"h6\">{children}</Typography>\n                {onClose ? (\n                    <IconButton\n                        aria-label=\"Close\"\n                        className={classes.closeButton}\n                        onClick={onClose}\n                    >\n                        <FontAwesomeIcon icon={['fas', 'times']} />\n                    </IconButton>\n                ) : null}\n            </MuiDialogTitle>\n        );\n    }\n);\n","import { withStyles } from '@material-ui/core/styles';\nimport MuiTableCell, { TableCellBaseProps } from '@material-ui/core/TableCell';\nimport { TableCellProps } from '@material-ui/core/TableCell';\nimport React from 'react';\n\nexport const TableCell = withStyles(theme => ({\n    root: {\n        cursor: 'pointer'\n    }\n}))(\n    (props: {\n        children: React.ReactNode;\n        classes: any;\n        align?: 'inherit' | 'left' | 'center' | 'right' | 'justify';\n        component?: React.ReactType<TableCellBaseProps>;\n    }) => {\n        const { children, classes, align, component } = props;\n\n        return (\n            <MuiTableCell\n                className={classes.root}\n                align={align}\n                component={component}\n            >\n                {children}\n            </MuiTableCell>\n        );\n    }\n);\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { faCheck, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    Table,\n    TableBody,\n    TableHead,\n    TableRow\n} from '@material-ui/core';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { DialogContext } from '../../../context-providers/dialog-provider';\nimport { EditorContext } from '../../../context-providers/editor-provider';\nimport { Doc } from '../../../types';\nimport { DialogContent } from './dialog-content';\nimport { DialogTitle } from './dialog-title';\nimport './file-manager.scss';\nimport { TableCell } from './table-cell';\n\nlibrary.add(faTrashAlt, faCheck);\n\nexport const FileManager = React.memo(() => {\n    const { openDoc, docRepo, removeDoc } = useContext(EditorContext);\n    const {\n        isFileManagerOpen,\n        setFileManagerOpen,\n        setRemoveFileAlertOpen\n    } = useContext(DialogContext);\n    const [selectedDocId, setSelectedDocId] = useState<string>(\n        docRepo.currentDoc.id\n    );\n\n    useEffect(() => {\n        setSelectedDocId(docRepo.currentDoc.id);\n    }, [docRepo.currentDoc.id]);\n\n    const handleTableRowClick = (\n        e: React.MouseEvent<HTMLElement>,\n        doc: Doc\n    ) => {\n        setSelectedDocId(doc.id);\n    };\n\n    const handleClose = () => {\n        setFileManagerOpen(false);\n    };\n\n    const handleRemove = (e: React.MouseEvent<HTMLElement>, doc: Doc) => {\n        e.stopPropagation();\n        setFileManagerOpen(false);\n        setRemoveFileAlertOpen(true, doc);\n    };\n\n    const handleOpenFile = () => {\n        openDoc(selectedDocId);\n        setFileManagerOpen(false);\n    };\n\n    return (\n        <Dialog\n            aria-labelledby=\"customized-dialog-title\"\n            onClose={() => setFileManagerOpen(false)}\n            open={isFileManagerOpen}\n            fullWidth={true}\n        >\n            <DialogTitle onClose={handleClose}>\n                My document Repository\n            </DialogTitle>\n            <DialogContent>\n                <Table>\n                    <colgroup>\n                        <col width=\"1%\" />\n                        <col width=\"60%\" />\n                        <col width=\"38%\" />\n                        <col width=\"1%\" />\n                    </colgroup>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Selected</TableCell>\n                            <TableCell>Document</TableCell>\n                            <TableCell align=\"right\">Last Modified</TableCell>\n                            <TableCell>Options</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {docRepo.sortedDocs.map(doc => (\n                            <TableRow\n                                key={doc.id}\n                                hover={true}\n                                onClick={(e: React.MouseEvent<HTMLElement>) => {\n                                    return handleTableRowClick(e, doc);\n                                }}\n                            >\n                                <TableCell component=\"th\">\n                                    {doc.id === selectedDocId && (\n                                        <FontAwesomeIcon icon=\"check\" />\n                                    )}\n                                </TableCell>\n                                <TableCell component=\"th\">\n                                    {doc.docName}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                    {doc.getFriendlyLastModifiedTimespan()} ago\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                    <div\n                                        className=\"remove-handler\"\n                                        onClick={(\n                                            e: React.MouseEvent<HTMLElement>\n                                        ) => {\n                                            handleRemove(e, doc);\n                                        }}\n                                    >\n                                        <FontAwesomeIcon\n                                            icon=\"trash-alt\"\n                                            className=\"remove\"\n                                        />\n                                    </div>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    variant=\"contained\"\n                    onClick={handleOpenFile}\n                    color=\"primary\"\n                >\n                    Open\n                </Button>\n                <Button variant=\"contained\" onClick={handleClose}>\n                    Cancel\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n});\n","import {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Slide\n} from '@material-ui/core';\nimport { useContext } from 'react';\nimport React from 'react';\nimport { DialogContext } from '../../../context-providers/dialog-provider';\nimport { EditorContext } from '../../../context-providers/editor-provider';\n\nconst Transition = (props: any) => {\n    return <Slide direction=\"up\" {...props} />;\n};\n\nexport const RemoveFileAlert = () => {\n    const {\n        isRemoveFileAlertOpen,\n        setRemoveFileAlertOpen,\n        docToRemove\n    } = useContext(DialogContext);\n\n    const { removeDoc } = useContext(EditorContext);\n\n    const handleCancel = () => {\n        setRemoveFileAlertOpen(false);\n    };\n\n    const handleOkay = () => {\n        if (docToRemove) {\n            removeDoc(docToRemove.id);\n            setRemoveFileAlertOpen(false);\n        }\n    };\n\n    return docToRemove ? (\n        <div>\n            <Dialog\n                open={isRemoveFileAlertOpen}\n                TransitionComponent={Transition}\n                keepMounted={true}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    Remove this documet?\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {`\"${\n                            docToRemove.docName\n                        }\" will be unrecoverable after it's\n                        been removed. Would you like to continue?`}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleCancel}>Cancel</Button>\n                    <Button onClick={handleOkay} color=\"primary\">\n                        Okay\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </div>\n    ) : null;\n};\n","import React, { useState } from 'react';\nimport {\n    FileManager,\n    RemoveFileAlert\n} from '../../components/editor-app/dialogs';\nimport { Doc } from '../../types';\n\nexport interface IDialogContextValue {\n    setFileManagerOpen: (open: boolean) => void;\n    setRemoveFileAlertOpen: (open: boolean, doc?: Doc) => void;\n    isFileManagerOpen: boolean;\n    isRemoveFileAlertOpen: boolean;\n    docToRemove?: Doc;\n}\n\nexport interface IDialogProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const DialogContext = React.createContext<IDialogContextValue>({\n    setFileManagerOpen: () => {},\n    isFileManagerOpen: false,\n    setRemoveFileAlertOpen: () => {},\n    isRemoveFileAlertOpen: false,\n    docToRemove: new Doc('foo', 'bar', 'foobar', new Date())\n});\n\nexport interface IRemoveFileAlertState {\n    isRemoveFileAlertOpen: boolean;\n    doc?: Doc;\n}\n\nexport const DialogProvider = React.memo((props: IDialogProviderProps) => {\n    const [isFileManagerOpen, setFileManagerOpen] = useState<boolean>(false);\n    const [removeFileAlertState, setRemoveFileAlertState] = useState<\n        IRemoveFileAlertState\n    >({\n        isRemoveFileAlertOpen: false,\n        doc: new Doc('foo', 'bar', 'foobar', new Date())\n    });\n\n    const { children } = props;\n    const handleSetFileManagerOpen = (open: boolean) => {\n        setFileManagerOpen(open);\n    };\n    const handleRemoveFileAlertOpen = (open: boolean, doc?: Doc) => {\n        setRemoveFileAlertState({\n            isRemoveFileAlertOpen: true,\n            doc\n        });\n    };\n\n    return (\n        <DialogContext.Provider\n            value={{\n                isFileManagerOpen,\n                setFileManagerOpen: handleSetFileManagerOpen,\n                isRemoveFileAlertOpen:\n                    removeFileAlertState.isRemoveFileAlertOpen,\n                setRemoveFileAlertOpen: handleRemoveFileAlertOpen,\n                docToRemove: removeFileAlertState.doc\n            }}\n        >\n            <FileManager />\n            <RemoveFileAlert />\n            {children}\n        </DialogContext.Provider>\n    );\n});\n","import React, { useState } from 'react';\nimport { Menu } from '../../components/editor-app/toolbar';\n\nexport interface IMenuContextValue {\n    activeMenu?: Menu;\n    setActiveMenu: (menu?: Menu) => void;\n    open: boolean;\n    inTransition: boolean;\n}\n\nexport interface IMenuProviderProps {\n    children?: React.ReactNode;\n}\n\nexport const MenuContext = React.createContext<IMenuContextValue>({\n    setActiveMenu: () => {},\n    open: false,\n    inTransition: false\n});\n\nexport const MenuProvider = (props: IMenuProviderProps) => {\n    const { children } = props;\n    const [activeMenu, setActiveMenu] = useState<Menu | undefined>(undefined);\n    const [inTransition, setInTransition] = useState<boolean>(false);\n\n    const switchMenu = (nextActiveMenu?: Menu) => {\n        if (activeMenu === nextActiveMenu) {\n            setActiveMenu(undefined);\n        } else if (activeMenu) {\n            setInTransition(true);\n            setActiveMenu(undefined);\n            setTimeout(() => {\n                setActiveMenu(nextActiveMenu);\n                setInTransition(false);\n            }, 300);\n        } else {\n            setActiveMenu(nextActiveMenu);\n        }\n    };\n\n    return (\n        <MenuContext.Provider\n            value={{\n                activeMenu,\n                setActiveMenu: switchMenu,\n                open: activeMenu !== undefined,\n                inTransition\n            }}\n        >\n            {children}\n        </MenuContext.Provider>\n    );\n};\n","import React from 'react';\nimport './loading.scss';\n\nexport interface ILoadingProps {\n    text: string;\n}\n\nexport const Loading = (props: ILoadingProps) => {\n    const { text } = props;\n    return (\n        <div className=\"bg\">\n            <div className=\"spinner\">\n                <div className=\"bounce1\" />\n                <div className=\"bounce2\" />\n                <div className=\"bounce3\" />\n                <h2>{text}</h2>\n            </div>\n        </div>\n    );\n};\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport './side-bar-items.scss';\n\nexport interface ICommandButtonProps {\n    description: string;\n    heading: string;\n    icon: IconProp;\n    onClick?: () => void;\n}\n\nexport const CommandButton = (props: ICommandButtonProps) => {\n    const { description, heading, icon, onClick } = props;\n\n    return (\n        <React.Fragment>\n            <div className=\"container command\" onClick={onClick}>\n                <h3>{description}</h3>\n                <div className=\"primary\">\n                    <FontAwesomeIcon icon={icon} />\n                    {heading}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n","import { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport React, { useState } from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons';\nimport './side-bar-items.scss';\n\nlibrary.add(faChevronRight);\n\nexport interface IExpandableContainer {\n    description: string;\n    heading: string;\n    icon: IconProp;\n    children: React.ReactNode;\n    expanded: boolean;\n}\n\nexport const ExpandableContainer = (props: IExpandableContainer) => {\n    const {\n        description,\n        heading,\n        icon,\n        children,\n        expanded: initiallyExpanded\n    } = props;\n    const [expanded, setExpanded] = useState<boolean>(initiallyExpanded);\n\n    return (\n        <React.Fragment>\n            <div\n                className=\"container expandable\"\n                onClick={() => setExpanded(!expanded)}\n            >\n                <h3>{description}</h3>\n                <div className=\"primary\">\n                    <FontAwesomeIcon icon={icon} />\n                    {heading}\n                </div>\n                <FontAwesomeIcon\n                    className={classnames({\n                        chev: true,\n                        down: expanded\n                    })}\n                    icon=\"chevron-right\"\n                />\n            </div>\n            <div\n                className={classnames({\n                    hide: !expanded,\n                    content: true\n                })}\n            >\n                {children}\n            </div>\n        </React.Fragment>\n    );\n};\n\nExpandableContainer.defaultProps = {\n    expanded: false\n};\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nexport interface IShareLinksProps {\n    shareLink: string;\n}\n\nexport const ShareLinks = (props: IShareLinksProps) => {\n    const { shareLink } = props;\n    return (\n        <div className=\"container\">\n            <h3>Please copy the following link to share amongst:</h3>\n            <input\n                type=\"input\"\n                className=\"link\"\n                value={shareLink}\n                onFocus={handleLinkFocus}\n            />\n            <FontAwesomeIcon icon=\"copy\" />\n            <FontAwesomeIcon icon=\"pen-alt\" />\n        </div>\n    );\n};\n\nconst handleLinkFocus = (e: React.FocusEvent<HTMLInputElement>) => {\n    e.target.setSelectionRange(0, e.target.value.length);\n};\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    faCheck,\n    faDownload,\n    faFile,\n    faFilePdf,\n    faFileUpload,\n    faFileWord,\n    faPlus,\n    faTrashAlt\n} from '@fortawesome/free-solid-svg-icons';\n\nimport React, { useContext } from 'react';\nimport { DialogContext } from '../../../context-providers/dialog-provider';\nimport { EditorContext } from '../../../context-providers/editor-provider';\nimport { MenuContext } from '../../../context-providers/menu-provider';\nimport { CommandButton } from '../side-bar-items';\nimport './file-menu.scss';\n\nlibrary.add(\n    faPlus,\n    faTrashAlt,\n    faFileUpload,\n    faDownload,\n    faFilePdf,\n    faFileWord,\n    faFile,\n    faCheck\n);\n\nexport const FileMenu = () => {\n    const { setFileManagerOpen } = useContext(DialogContext);\n    const { setActiveMenu } = useContext(MenuContext);\n    const { newDoc } = useContext(EditorContext);\n\n    const handleNewFileClicked = () => {\n        newDoc();\n        setActiveMenu(undefined);\n    };\n\n    const handleFileManagerOpen = () => {\n        setFileManagerOpen(true);\n        setActiveMenu(undefined);\n    };\n\n    return (\n        <div className=\"file-menu generic-menu\">\n            <CommandButton\n                description=\"Create a new document\"\n                heading=\"New Document\"\n                icon=\"plus\"\n                onClick={handleNewFileClicked}\n            />\n            <CommandButton\n                description=\"Manage existing document from cloud\"\n                heading=\"Open Document Repository\"\n                icon=\"file\"\n                onClick={handleFileManagerOpen}\n            />\n            <CommandButton\n                description=\"Upload a Markdown file from local drive\"\n                heading=\"Upload Markdown\"\n                icon=\"file-upload\"\n            />\n        </div>\n    );\n};\n","import { Preview } from './preview';\nexport default Preview;\n","import React, { Component } from 'react';\n\nimport 'highlight.js/styles/vs.css';\nimport './preview.scss';\n\nexport interface IPreviewProps {\n    previewContent: string;\n    scrollPercentage: number;\n    onScroll: (scrollPercentage: number) => void;\n    onFocus: () => void;\n    onBlur: () => void;\n    onMouseOver: () => void;\n}\n\nexport class Preview extends Component<IPreviewProps> {\n    public previewRef: React.RefObject<HTMLDivElement>;\n    constructor(props: IPreviewProps) {\n        super(props);\n        this.previewRef = React.createRef();\n    }\n\n    public componentDidUpdate() {\n        const { scrollPercentage } = this.props;\n        if (this.previewRef.current) {\n            const topOffset =\n                scrollPercentage * this.previewRef.current.scrollHeight;\n            this.previewRef.current.scrollTo(0, topOffset);\n        }\n    }\n\n    public render() {\n        const {\n            previewContent: content,\n            onFocus,\n            onBlur,\n\n            onMouseOver\n        } = this.props;\n\n        return (\n            <div className=\"preview-wrapper\">\n                <div\n                    ref={this.previewRef}\n                    className=\"preview-pane markdown-body\"\n                    onScroll={this.handleScroll}\n                    onMouseEnter={onFocus}\n                    onMouseLeave={onBlur}\n                    onMouseOver={onMouseOver}\n                    dangerouslySetInnerHTML={this.injectPreviewMarkup(content)}\n                />\n            </div>\n        );\n    }\n\n    private handleScroll = () => {\n        if (this.previewRef.current) {\n            const scrollPercentage =\n                this.previewRef.current.scrollTop /\n                this.previewRef.current.scrollHeight;\n\n            this.props.onScroll(scrollPercentage);\n        }\n    };\n\n    private injectPreviewMarkup = (markup: string) => {\n        return { __html: markup };\n    };\n}\n","import Button from '@material-ui/core/Button';\nimport React, { useContext } from 'react';\nimport './share-menu.scss';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    faCogs,\n    faCopy,\n    faExternalLinkSquareAlt,\n    faFileAlt,\n    faFilePdf,\n    faFileWord,\n    faNewspaper,\n    faPenAlt,\n    faUnlockAlt\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n    CommandButton,\n    ExpandableContainer,\n    ShareLinks\n} from '../side-bar-items';\nimport { EditorContext } from '../../../context-providers/editor-provider';\n\nlibrary.add(\n    faExternalLinkSquareAlt,\n    faFilePdf,\n    faFileWord,\n    faUnlockAlt,\n    faCopy,\n    faPenAlt,\n    faFileAlt,\n    faNewspaper,\n    faCogs\n);\n\nexport interface IShareMenuProps {\n    shareLink: string;\n}\n\nexport const ShareMenu = (props: IShareMenuProps) => {\n    const { shareLink } = props;\n    const { publishCurrentDoc: publishDoc } = useContext(EditorContext);\n    return (\n        <div className=\"share-menu generic-menu\">\n            <CommandButton\n                description=\"Export the document as Microsoft Word\"\n                heading=\"Download as Word\"\n                icon=\"file-word\"\n            />\n            <CommandButton\n                description=\"Export the document as Adobe Pdf\"\n                heading=\"Download as Pdf\"\n                icon=\"file-pdf\"\n            />\n            <CommandButton\n                onClick={publishDoc}\n                description=\"Please publish first to obtain sharing links\"\n                heading=\"Publish Now\"\n                icon=\"external-link-square-alt\"\n            />\n            <ShareLinks shareLink={shareLink} />\n            <ExpandableContainer\n                description=\"Options about sharing\"\n                heading=\"Options\"\n                icon=\"cogs\"\n            >\n                <div className=\"container\">\n                    <h3>Options about sharing</h3>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"file-word\" />\n                        <label>Generate MS Word</label>\n                        <input type=\"checkbox\" />\n                    </div>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"file-pdf\" />\n                        <label>Generate Adobe PDF</label>\n                        <input type=\"checkbox\" />\n                    </div>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"unlock-alt\" />\n                        <label>Protect doc with a Secret</label>\n                        <input type=\"checkbox\" />\n                    </div>\n                </div>\n                <div className=\"container\">\n                    <h3>Secrets</h3>\n                    <h4>Secret phrase to protect the document</h4>\n                    <input\n                        type=\"text\"\n                        className=\"secret\"\n                        placeholder=\"Please enter secret phrase\"\n                    />\n                    <h3>Options about secrets</h3>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"file-alt\" />\n                        <label>Protect the document</label>\n                        <input type=\"radio\" />\n                    </div>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"newspaper\" className=\"narrow\" />\n                        <label>Protect sections</label>\n                        <input type=\"radio\" />\n                    </div>\n                    <div className=\"field\">\n                        <FontAwesomeIcon icon=\"file-pdf\" />\n                        <label>Protect Word / PDF Downlads</label>\n                        <input type=\"checkbox\" />\n                    </div>\n                </div>\n                <div className=\"container buttons\">\n                    <Button variant=\"contained\" color=\"primary\" size=\"small\">\n                        Update\n                    </Button>\n                    <Button variant=\"contained\" size=\"small\">\n                        Cancel\n                    </Button>\n                </div>\n            </ExpandableContainer>\n        </div>\n    );\n};\n","import classnames from 'classnames';\nimport React, { ReactNode, useContext } from 'react';\nimport { MenuContext } from '../../../context-providers/menu-provider';\nimport './side-bar.scss';\n\nexport interface ISideBarProps {\n    children?: ReactNode;\n}\n\nexport const SideBar = (props: ISideBarProps) => {\n    const { children } = props;\n\n    const { open, inTransition, setActiveMenu } = useContext(MenuContext);\n\n    return (\n        <React.Fragment>\n            <div\n                className={classnames({\n                    hide: !open && !inTransition,\n                    'side-bar-overlay': true\n                })}\n                onClick={() => setActiveMenu(undefined)}\n            />\n            <div\n                className={classnames({\n                    hide: !open,\n                    'side-bar': true\n                })}\n            >\n                {children}\n            </div>\n            ;\n        </React.Fragment>\n    );\n};\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport {\n    faColumns,\n    faSave,\n    faToolbox\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useState } from 'react';\nlibrary.add(faSave, faColumns, faToolbox);\nimport classnames from 'classnames';\nimport './status-bar.scss';\n\nexport interface IStatusBarProps {\n    onToolbarToggle: () => void;\n    onSplitScreenToggle: () => void;\n    charCount: number;\n    wordCount: number;\n    lineCount: number;\n    isSaving: boolean;\n    hideToolbar: boolean;\n    splitScreen: boolean;\n}\n\nexport const StatusBar = (props: IStatusBarProps) => {\n    const {\n        charCount,\n        wordCount,\n        lineCount,\n        isSaving,\n        hideToolbar,\n        splitScreen\n    } = props;\n\n    const savingIcon = isSaving && <FontAwesomeIcon icon=\"save\" />;\n    return (\n        <div className=\"status-bar\">\n            <span>{savingIcon} </span>\n            <span\n                className={classnames({\n                    command: true,\n                    active: splitScreen\n                })}\n                onClick={props.onSplitScreenToggle}\n            >\n                <FontAwesomeIcon icon=\"columns\" />\n            </span>\n            <span\n                className={classnames({\n                    command: true,\n                    active: !hideToolbar\n                })}\n                onClick={props.onToolbarToggle}\n            >\n                <FontAwesomeIcon icon=\"toolbox\" />\n            </span>\n            <span>Markdown</span>\n            <span>\n                <b>{charCount}</b> chars\n            </span>\n            <span>\n                <b>{wordCount}</b> words\n            </span>\n            <span>\n                <b>{lineCount}</b> lines\n            </span>\n        </div>\n    );\n};\n","import { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n    faFolder,\n    faShare,\n    faSync,\n    faUserSecret\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classnames from 'classnames';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../../context-providers/auth-provider';\nimport { EditorContext } from '../../../context-providers/editor-provider';\nimport { MenuContext } from '../../../context-providers/menu-provider';\nimport { UserType } from '../../../types';\nimport './toolbar.scss';\n\nlibrary.add(faFolder, faShare, faUserSecret, faSync, fab);\n\nexport enum Menu {\n    File = 'File',\n    Share = 'Share',\n    UserProfile = 'UserProfile'\n}\n\nexport interface IToolbarProps {\n    lostFocus: boolean;\n    onMenuToggle: (menu: Menu) => void;\n}\n\nexport const Toolbar = (props: IToolbarProps) => {\n    const { currentUser } = useContext(AuthContext);\n    const { updateCurrentDocName, docRepo } = useContext(EditorContext);\n    const { activeMenu, setActiveMenu } = useContext(MenuContext);\n\n    const calculateDocNameWidth = (docName: string): number => {\n        return docName.length * 12 + 10;\n    };\n\n    const getInputStyle = (docName: string): React.CSSProperties => {\n        const docNameWidth = calculateDocNameWidth(docName);\n\n        return docNameWidth > 100\n            ? {\n                  width: calculateDocNameWidth(docName) + 'px'\n              }\n            : {};\n    };\n\n    return (\n        <div className=\"toolbar-extra\">\n            <div className=\"filename\">\n                <input\n                    style={getInputStyle(docRepo.currentDoc.docName)}\n                    type=\"text\"\n                    value={docRepo.currentDoc.docName}\n                    className={classnames({\n                        error: docRepo.currentDoc.docName.length === 0\n                    })}\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        updateCurrentDocName(e.target.value);\n                    }}\n                    placeholder=\"Enter title\"\n                    maxLength={15}\n                />\n            </div>\n            <ul>\n                <li>\n                    <a\n                        href={`http://localhost:3000/preview/${\n                            docRepo.currentDoc.id\n                        }`}\n                        target=\"_blank\"\n                    >\n                        <i>\n                            <FontAwesomeIcon icon={['fab', 'firefox']} />\n                        </i>\n                    </a>\n                </li>\n\n                <li onClick={() => setActiveMenu(Menu.File)}>\n                    <i\n                        className={classnames({\n                            active: activeMenu === Menu.File\n                        })}\n                    >\n                        <FontAwesomeIcon icon=\"folder\" />\n                    </i>\n                </li>\n                <li onClick={() => setActiveMenu(Menu.Share)}>\n                    <i\n                        className={classnames({\n                            active: activeMenu === Menu.Share\n                        })}\n                    >\n                        <FontAwesomeIcon icon=\"share\" />\n                    </i>\n                </li>\n                <li onClick={() => setActiveMenu(Menu.UserProfile)}>\n                    <i\n                        className={classnames({\n                            active: activeMenu === Menu.UserProfile\n                        })}\n                    >\n                        {currentUser &&\n                        currentUser.userType === UserType.Facebook ? (\n                            <FontAwesomeIcon\n                                icon={['fab', 'facebook-square']}\n                            />\n                        ) : (\n                            <FontAwesomeIcon icon=\"user-secret\" />\n                        )}\n                    </i>\n                </li>\n            </ul>\n        </div>\n    );\n};\n","import classnames from 'classnames';\nimport React, { useContext } from 'react';\nimport { AuthContext } from '../../../context-providers/auth-provider';\nimport { UserType } from '../../../types';\nimport { CommandButton } from '../side-bar-items';\n\nexport const UserProfileMenu = () => {\n    const { currentUser, login, logout } = useContext(AuthContext);\n\n    return (\n        <div className=\"user-profile generic-menu\">\n            {currentUser && currentUser.userType === UserType.Anonymous ? (\n                <CommandButton\n                    description=\"Login to yame using your facebook account to access your documents everywhere\"\n                    heading=\"Login to Facebook\"\n                    icon={['fab', 'facebook-square']}\n                    onClick={login}\n                />\n            ) : (\n                <CommandButton\n                    description=\"Sign out from yame. You will no longer able to access your documents on a different computer\"\n                    heading=\"Logout from Facebook\"\n                    icon={['fas', 'user-secret']}\n                    onClick={logout}\n                />\n            )}\n        </div>\n    );\n};\n","import classnames from 'classnames';\nimport 'easymde/dist/easymde.min.css';\nimport React, { Component } from 'react';\nimport SimpleMDE from 'react-simplemde-editor';\nimport { EditorContext } from '../../../context-providers/editor-provider';\nimport { MenuContext } from '../../../context-providers/menu-provider';\nimport { FileMenu } from '../file-menu/file-menu';\nimport Preview from '../preview';\nimport { ShareMenu } from '../share-menu';\nimport { SideBar } from '../side-bar';\nimport { StatusBar } from '../status-bar';\nimport { Menu, Toolbar } from '../toolbar';\nimport { UserProfileMenu } from '../user-profile-menu';\nimport './editor.scss';\n\nexport interface IEditorProps extends IEditorDefaultProps {}\n\nexport interface IEditorDefaultProps {\n    splitScreen: boolean;\n    hideToolbars: boolean;\n}\n\nexport interface IEditorState {\n    editorScrollPercentage: number;\n    toolbarOutOfFocus: boolean;\n    splitScreen: boolean;\n    hideToolbars: boolean;\n}\n\nexport class Editor extends Component<IEditorProps, IEditorState> {\n    public static defaultProps: IEditorDefaultProps = {\n        splitScreen: true,\n        hideToolbars: false\n    };\n    private mdeInstance?: any;\n    private previewInFocus: boolean;\n\n    constructor(props: IEditorProps) {\n        super(props);\n\n        this.state = {\n            editorScrollPercentage: 0,\n            toolbarOutOfFocus: true,\n            splitScreen: this.props.splitScreen,\n            hideToolbars: this.props.hideToolbars\n        };\n        this.previewInFocus = false;\n    }\n\n    public render() {\n        const {\n            editorScrollPercentage,\n            toolbarOutOfFocus,\n            hideToolbars,\n            splitScreen\n        } = this.state;\n\n        return (\n            <EditorContext.Consumer>\n                {({ docRepo, isSaving, editorKey, updateCurrentDoc }) => (\n                    <MenuContext.Consumer>\n                        {({ activeMenu, setActiveMenu }) => (\n                            <div\n                                className={classnames({\n                                    'editor-container': true,\n                                    'side-bar-open': activeMenu,\n                                    'no-toolbar': hideToolbars,\n                                    'editor-only': !splitScreen\n                                })}\n                            >\n                                <Toolbar\n                                    lostFocus={toolbarOutOfFocus}\n                                    onMenuToggle={setActiveMenu}\n                                />\n                                <div className=\"left-pane\">\n                                    <SimpleMDE\n                                        key={editorKey}\n                                        onChange={updateCurrentDoc}\n                                        getMdeInstance={this.setInstance}\n                                        value={docRepo.currentDoc.content}\n                                        events={{\n                                            change: () => {},\n                                            changes: () => {},\n                                            beforeChange: () => {},\n                                            cursorActivity: () => {},\n                                            beforeSelectionChange: () => {},\n                                            viewportChange: () => {},\n                                            gutterClick: () => {},\n                                            focus: () => {},\n                                            blur: () => {},\n                                            scroll: (e: any) =>\n                                                this.handleEditorScroll(e),\n                                            update: () => {},\n                                            renderLine: () => {},\n                                            mousedown: () => {},\n                                            dblclick: () => {},\n                                            touchstart: () => {},\n                                            contextmenu: () => {},\n                                            keydown: () => {},\n                                            keypress: () => {},\n                                            keyup: () => {},\n                                            cut: () => {},\n                                            copy: () => {},\n                                            paste: () => {},\n                                            dragstart: () => {},\n                                            dragenter: () => {},\n                                            dragover: () => {},\n                                            dragleave: () => {},\n                                            drop: () => {}\n                                        }}\n                                        options={{\n                                            status: false,\n                                            autosave: {\n                                                enabled: false,\n                                                uniqueId: 'hackable'\n                                            },\n                                            toolbar: [\n                                                'bold',\n                                                'italic',\n                                                'strikethrough',\n                                                '|',\n                                                'heading-1',\n                                                'heading-2',\n                                                'heading-3',\n                                                '|',\n                                                'unordered-list',\n                                                'ordered-list',\n                                                '|',\n                                                'code',\n                                                'link',\n                                                'image',\n                                                'table'\n                                            ]\n                                        }}\n                                    />\n                                </div>\n                                <div className=\"splitter\" />\n                                <div className=\"right-pane\">\n                                    <Preview\n                                        scrollPercentage={\n                                            editorScrollPercentage\n                                        }\n                                        previewContent={docRepo.currentDoc.renderContent()}\n                                        onScroll={this.handlePreviewScroll}\n                                        onFocus={this.handlePreviewFocus}\n                                        onMouseOver={this.handlePreviewFocus}\n                                        onBlur={this.handlePreviewBlur}\n                                    />\n                                </div>\n                                <SideBar>\n                                    <React.Fragment>\n                                        {activeMenu === Menu.File && (\n                                            <FileMenu />\n                                        )}\n                                        {activeMenu === Menu.Share && (\n                                            <ShareMenu shareLink=\"http://yame.io/silver-xu/resume\" />\n                                        )}\n                                        {activeMenu === Menu.UserProfile && (\n                                            <UserProfileMenu />\n                                        )}\n                                    </React.Fragment>\n                                </SideBar>\n                                <StatusBar\n                                    onToolbarToggle={this.handleToolbarToggle}\n                                    onSplitScreenToggle={\n                                        this.handleSplitScreenToggle\n                                    }\n                                    charCount={\n                                        docRepo.currentDoc.getStatistics()\n                                            .charCount\n                                    }\n                                    lineCount={\n                                        docRepo.currentDoc.getStatistics()\n                                            .lineCount\n                                    }\n                                    wordCount={\n                                        docRepo.currentDoc.getStatistics()\n                                            .wordCount\n                                    }\n                                    isSaving={isSaving}\n                                    hideToolbar={hideToolbars}\n                                    splitScreen={splitScreen}\n                                />\n                            </div>\n                        )}\n                    </MenuContext.Consumer>\n                )}\n            </EditorContext.Consumer>\n        );\n    }\n\n    private handlePreviewFocus = () => {\n        this.previewInFocus = true;\n    };\n    private handlePreviewBlur = () => {\n        this.previewInFocus = false;\n    };\n\n    private handleEditorScroll = (e: any) => {\n        if (!this.previewInFocus) {\n            const scrollPercentage = e.doc.scrollTop / e.doc.height;\n            this.setState({ editorScrollPercentage: scrollPercentage });\n        }\n    };\n\n    private setInstance = (instance: any) => {\n        this.mdeInstance = instance;\n        this.mdeInstance.codemirror.setOption('lineNumbers', true);\n    };\n\n    private handlePreviewScroll = (previewScrollPercentage: number) => {\n        if (this.mdeInstance && this.previewInFocus) {\n            const offsetTop =\n                this.mdeInstance.codemirror.doc.height *\n                previewScrollPercentage;\n            this.mdeInstance.codemirror.scrollTo(0, offsetTop);\n        }\n    };\n\n    private handleSplitScreenToggle = () => {\n        this.setState({\n            splitScreen: !this.state.splitScreen\n        });\n    };\n\n    private handleToolbarToggle = () => {\n        this.setState({\n            hideToolbars: !this.state.hideToolbars\n        });\n    };\n}\n","import { Editor } from './editor';\nexport default Editor;\n","import { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { HttpLink } from 'apollo-link-http';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { ApolloProvider, Query } from 'react-apollo';\nimport { DialogProvider } from '../../../context-providers/dialog-provider';\nimport { EditorProvider } from '../../../context-providers/editor-provider';\nimport { MenuProvider } from '../../../context-providers/menu-provider';\nimport { DocRepo, IUser } from '../../../types';\nimport { Loading } from '../../loading';\nimport Editor from '../editor';\n\nconst API_URL = process.env.REACT_APP_EXP_API_URL || '';\n\nconst DOC_REPO_QUERY = gql`\n    {\n        docRepo {\n            docs {\n                id\n                docName\n                content\n                lastModified\n            }\n            publishedDocs {\n                id\n                docName\n                content\n                lastModified\n            }\n        }\n        defaultDoc {\n            namePrefix\n            defaultContent\n        }\n    }\n`;\n\nexport interface IEditorQueryProps {\n    currentUser?: IUser;\n}\n\nexport const EditorQuery = React.memo((props: IEditorQueryProps) => {\n    const { currentUser } = props;\n\n    const authLink = setContext((_, { headers }: { headers: any }) => {\n        return {\n            headers: {\n                ...headers,\n                authorization: currentUser ? currentUser.authToken : undefined\n            }\n        };\n    });\n\n    const client = new ApolloClient({\n        link: ApolloLink.from([\n            onError(({ graphQLErrors, networkError }) => {\n                if (graphQLErrors) {\n                    graphQLErrors.map(({ message, locations, path }) =>\n                        console.log(\n                            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n                        )\n                    );\n                }\n                if (networkError) {\n                    console.log(`[Network error]: ${networkError}`);\n                }\n            }),\n            authLink.concat(\n                new HttpLink({\n                    uri: API_URL\n                })\n            )\n        ]),\n        cache: new InMemoryCache()\n    });\n\n    return currentUser ? (\n        <ApolloProvider client={client}>\n            <Query\n                query={DOC_REPO_QUERY}\n                variables={{ authToken: currentUser.authToken }}\n                fetchPolicy=\"network-only\"\n            >\n                {({ loading, error, data }) => {\n                    console.log(data);\n                    const docRepo =\n                        data && data.docRepo\n                            ? DocRepo.parseFromResponse(data.docRepo)\n                            : undefined;\n\n                    return docRepo ? (\n                        <div className=\"App\">\n                            <EditorProvider\n                                docRepo={docRepo}\n                                defaultDoc={data.defaultDoc}\n                            >\n                                <DialogProvider>\n                                    <MenuProvider>\n                                        <Editor />\n                                    </MenuProvider>\n                                </DialogProvider>\n                            </EditorProvider>\n                        </div>\n                    ) : (\n                        <Loading text=\"Initializing Yame editor...\" />\n                    );\n                }}\n            </Query>\n        </ApolloProvider>\n    ) : (\n        <Loading text=\"Authenticating User...\" />\n    );\n});\n","import { MuiThemeProvider } from '@material-ui/core';\nimport React from 'react';\nimport {\n    AuthContext,\n    AuthProvider\n} from '../../context-providers/auth-provider';\nimport MuiTheme from '../../theme';\nimport './editor-app.css';\nimport { EditorQuery } from './editor-query';\n\nexport const EditorApp = () => {\n    return (\n        <MuiThemeProvider theme={MuiTheme}>\n            <AuthProvider>\n                <AuthContext.Consumer>\n                    {({ currentUser }) => (\n                        <EditorQuery currentUser={currentUser} />\n                    )}\n                </AuthContext.Consumer>\n            </AuthProvider>\n        </MuiThemeProvider>\n    );\n};\n","import React from 'react';\nimport { Doc } from '../../../types';\nimport './content.scss';\n\nexport interface IContentProps {\n    doc: Doc;\n}\n\nexport const Content = (props: IContentProps) => {\n    const { doc } = props;\n\n    const createMarkup = () => {\n        return { __html: doc.renderContent() };\n    };\n\n    return (\n        <div\n            className=\"markdown-body\"\n            dangerouslySetInnerHTML={createMarkup()}\n        />\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Doc } from '../../../types';\nimport { IContentNode } from '../../../types/doc';\nimport { Content } from '../content';\n\nimport { Fab } from '@material-ui/core';\nimport classnames from 'classnames';\nimport { isElementInViewport } from '../../../utils/dom';\nimport './preview.scss';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faArrowUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport throttle from 'lodash.throttle';\n\nlibrary.add(faArrowUp);\n\nexport interface IPreviewProps {\n    doc: Doc;\n}\n\nexport interface INodeDom {\n    node: IContentNode;\n    dom: Element;\n}\n\nconst TOP_OFFSET = 60;\nconst SHOWUPBUTTON_THREASHOLD = 200;\n\nexport const Preview = (props: IPreviewProps) => {\n    const { doc } = props;\n    const nodeTree = doc.buildContentNodeTree();\n    const nodeDoms: { [id: string]: INodeDom } = {};\n\n    const traverseTree = (\n        currentNode: IContentNode,\n        action: (node: IContentNode) => void\n    ) => {\n        currentNode.nodes.forEach(node => {\n            action(node);\n            traverseTree(node, action);\n        });\n    };\n\n    const getActiveNodeDom = (): INodeDom | undefined => {\n        let minClientTopNodeDom: INodeDom | undefined;\n\n        Object.entries(nodeDoms).map(([, nodeDom]: [string, INodeDom]) => {\n            if (\n                isElementInViewport(nodeDom.dom, TOP_OFFSET) &&\n                (!minClientTopNodeDom ||\n                    nodeDom.dom.scrollTop < minClientTopNodeDom.dom.scrollTop)\n            ) {\n                minClientTopNodeDom = nodeDom;\n            }\n        });\n\n        return minClientTopNodeDom;\n    };\n\n    const [activeNode, setActiveNode] = useState<IContentNode | undefined>(\n        undefined\n    );\n\n    const [surpressScrollTracking, setSurpressScrollTracking] = useState<\n        boolean\n    >(false);\n\n    const [showScrollUp, setShowScrollUp] = useState<boolean>(false);\n\n    const contentRef = React.createRef<HTMLDivElement>();\n\n    useEffect(() => {\n        traverseTree(nodeTree, (node: IContentNode) => {\n            const element = document.querySelector(`#${node.id}`);\n\n            if (element) {\n                nodeDoms[node.id] = { dom: element, node };\n            }\n        });\n        if (surpressScrollTracking) {\n            return;\n        }\n\n        if (!activeNode) {\n            const activeNodeDom = getActiveNodeDom();\n            setActiveNode(activeNodeDom ? activeNodeDom.node : undefined);\n        }\n    }, [{}]);\n\n    const handleContentScroll = (e: React.SyntheticEvent<HTMLElement>) => {\n        if (surpressScrollTracking) {\n            return;\n        }\n\n        const newActiveNodeDom = getActiveNodeDom();\n\n        if (\n            newActiveNodeDom &&\n            activeNode &&\n            newActiveNodeDom.node.id !== activeNode.id\n        ) {\n            setActiveNode(newActiveNodeDom.node);\n        }\n\n        if (e.currentTarget.scrollTop > SHOWUPBUTTON_THREASHOLD) {\n            setShowScrollUp(true);\n        } else {\n            setShowScrollUp(false);\n        }\n    };\n\n    const handleLinkClick = (\n        e: React.MouseEvent<HTMLElement>,\n        node: IContentNode\n    ) => {\n        e.stopPropagation();\n        setSurpressScrollTracking(true);\n        setActiveNode(node);\n        setTimeout(() => {\n            setSurpressScrollTracking(false);\n        }, 1000);\n    };\n\n    const handleUpClick = () => {\n        if (contentRef.current) {\n            contentRef.current.scrollTo(0, 0);\n        }\n    };\n\n    const renderTree = (treeNode: IContentNode) => {\n        return (\n            <ul>\n                {treeNode.nodes.map(node => (\n                    <li\n                        onClick={(e: React.MouseEvent<HTMLElement>) =>\n                            handleLinkClick(e, node)\n                        }\n                    >\n                        <a\n                            href={`#${node.id}`}\n                            className={classnames({\n                                active: activeNode && node.id === activeNode.id\n                            })}\n                        >\n                            {node.text}\n                        </a>\n                        {renderTree(node)}\n                    </li>\n                ))}\n            </ul>\n        );\n    };\n\n    return (\n        <div>\n            <div className=\"header\">\n                This is a preview of [{doc.docName}], copy & paste the url would\n                not work without your account.\n            </div>\n            <div className=\"nav\">{renderTree(nodeTree)}</div> */}\n            <div\n                className=\"content\"\n                ref={contentRef}\n                onScroll={() => throttle(handleContentScroll, 100)}\n            >\n                <Content doc={doc} />\n            </div>\n            <div className=\"floating-tools\">\n                <Fab\n                    aria-label=\"Up\"\n                    onClick={handleUpClick}\n                    className={classnames({ hide: !showScrollUp })}\n                >\n                    <FontAwesomeIcon icon=\"arrow-up\" />\n                </Fab>\n            </div>\n        </div>\n    );\n};\n","export const isElementInViewport = (\n    el: Element,\n    topOffset: number = 0\n): boolean => {\n    const rect = el.getBoundingClientRect();\n\n    return (\n        rect.top >= topOffset &&\n        rect.left >= 0 &&\n        rect.bottom <=\n            (window.innerHeight || document.documentElement.clientHeight) &&\n        rect.right <=\n            (window.innerWidth || document.documentElement.clientWidth)\n    );\n};\n","import { InMemoryCache } from 'apollo-cache-inmemory';\nimport ApolloClient from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { setContext } from 'apollo-link-context';\nimport { onError } from 'apollo-link-error';\nimport { HttpLink } from 'apollo-link-http';\nimport gql from 'graphql-tag';\nimport React from 'react';\nimport { ApolloProvider, Query } from 'react-apollo';\nimport { Doc, IUser } from '../../../types';\nimport { Loading } from '../../loading';\nimport { Preview } from '../preview';\n\nconst API_URL = 'http://localhost:3001/graphql';\n\nconst DOC_QUERY = gql`\n    query Doc($docId: String!) {\n        doc(docId: $docId) {\n            id\n            docName\n            content\n            lastModified\n        }\n    }\n`;\n\nexport interface IPreviewQueryProps {\n    currentUser?: IUser;\n    docId: string;\n}\n\nexport const PreviewQuery = React.memo((props: IPreviewQueryProps) => {\n    const { currentUser, docId } = props;\n\n    const authLink = setContext((_, { headers }: { headers: any }) => {\n        return {\n            headers: {\n                ...headers,\n                authorization: currentUser ? currentUser.authToken : undefined\n            }\n        };\n    });\n\n    const client = new ApolloClient({\n        link: ApolloLink.from([\n            onError(({ graphQLErrors, networkError }) => {\n                if (graphQLErrors) {\n                    graphQLErrors.map(({ message, locations, path }) =>\n                        console.log(\n                            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n                        )\n                    );\n                }\n                if (networkError) {\n                    console.log(`[Network error]: ${networkError}`);\n                }\n            }),\n            authLink.concat(\n                new HttpLink({\n                    uri: API_URL\n                })\n            )\n        ]),\n        cache: new InMemoryCache()\n    });\n\n    return currentUser ? (\n        <ApolloProvider client={client}>\n            <Query\n                query={DOC_QUERY}\n                variables={{ authToken: currentUser.authToken, docId }}\n                fetchPolicy=\"network-only\"\n            >\n                {({ loading, error, data }) => {\n                    return !loading && !error && data.doc ? (\n                        <div className=\"App\">\n                            <Preview doc={Doc.parseFromResponse(data)} />\n                        </div>\n                    ) : (\n                        <Loading text=\"Initializing Yame Previewer...\" />\n                    );\n                }}\n            </Query>\n        </ApolloProvider>\n    ) : (\n        <Loading text=\"Authenticating User...\" />\n    );\n});\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport {\n    AuthContext,\n    AuthProvider\n} from '../../context-providers/auth-provider';\nimport { Preview } from './preview';\nimport { PreviewQuery } from './preview-query';\n\nexport interface IPreviewAppProps extends RouteComponentProps<any> {}\nexport const PreviewApp = (props: IPreviewAppProps) => {\n    const { docId } = props.match.params;\n    return (\n        <AuthProvider>\n            <AuthContext.Consumer>\n                {({ currentUser }) => (\n                    <PreviewQuery currentUser={currentUser} docId={docId} />\n                )}\n            </AuthContext.Consumer>\n        </AuthProvider>\n    );\n};\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\n\nexport interface IViewAppProps extends RouteComponentProps<any> {}\n\nexport const ViewerApp = (props: IViewAppProps) => {\n    return <div>{props.match.params.permalink}</div>;\n};\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { EditorApp } from './components/editor-app';\nimport { PreviewApp } from './components/preview-app';\nimport { ViewerApp } from './components/viewer-app';\n\nconst App = () => {\n    return (\n        <BrowserRouter>\n            <React.Fragment>\n                <Switch>\n                    <Route exact={true} path=\"/editor\" component={EditorApp} />\n                    <Route\n                        exact={true}\n                        path=\"/preview/:docId\"\n                        component={PreviewApp}\n                    />\n                    <Route\n                        exact={true}\n                        path=\"/:username/:permalink\"\n                        component={ViewerApp}\n                    />\n                </Switch>\n            </React.Fragment>\n        </BrowserRouter>\n    );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href\n        );\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}